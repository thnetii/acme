parameters:
  agentPool:        Hosted VS2017
  runtimeMoniker:   win10-x64
  jobNamePrefix:    windows
  jobDisplayPrefix: 'Windows:'
  condition: true

  artifactPrefix: $(System.TeamProject)

  enableCodeCoverage:         true
  buildConfigurationDebug:    true
  buildConfigurationRelease:  true
  publishDependencyMode:      framework

  solutionProjects: '*.sln'
  testProjects:     '[Tt]est/*/*.csproj'
  publishProjects:  '[Ss]rc/*/*.csproj'
  commonArguments:                  -p:BuildId=$(Build.BuildId)
  addCommonArguments:               ''
  addConfigurationDebugArguments:   --configuration Debug
  addConfigurationReleseArguments:  --configuration Release
  addCodeCoverageArguments:         --collect "Code Coverage"
  addRuntimeArgumentPrefix:         --runtime
  addPublishArguments:              -p:BuildDefaultTargetFramework=true
  addSelfContainedArguments:        --self-contained
jobs:
- ${{ if and(eq('true', parameters.buildConfigurationDebug), eq('framework', parameters.publishDependencyMode)) }}:
  - job: ${{ parameters.jobNamePrefix }}debugFrameworkDependent
    displayName: ${{ parameters.jobDisplayPrefix }} Debug Configuration
    pool: ${{ parameters.agentPool }}
    condition: and(ne(variables['SkipConfigurationDebug'], 'true'), ne(variables['SkipFrameworkDependent'], 'true'), ${{ parameters.condition }})
    steps:
    - template: azure-pipelines.dotnetcore.steps.yml
      parameters:
        sourceProjects: ${{ parameters.solutionProjects }}
        testProjects: ${{ parameters.testProjects }}
        publishProjects: ${{ parameters.publishProjects }}

        restoreDisplayName: dotnet restore
        restoreArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }}

        buildDisplayName: dotnet build ${{ parameters.addConfigurationDebugArguments }}
        buildArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }}

        ${{ if ne('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationDebugArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }}
        ${{ if eq('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addCodeCoverageArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addCodeCoverageArguments }}

        publishDisplayName: dotnet publish ${{ parameters.addConfigurationDebugArguments }}
        publishArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addPublishArguments }} ${{ parameters.addConfigurationDebugArguments }}
        publishOutputName: debug

        artifactPrefix: ${{ parameters.artifactPrefix }}

- ${{ if and(eq('true', parameters.buildConfigurationDebug), eq('self-contained', parameters.publishDependencyMode)) }}:
  - job: ${{ parameters.jobNamePrefix }}debugSelfContained
    displayName: '${{ parameters.jobDisplayPrefix }} Debug Configuration (Self-Contained)'
    pool: ${{ parameters.agentPool }}
    condition: and(ne(variables['SkipConfigurationDebug'], 'true'), ne(variables['SkipSelfContained'], 'true'), ${{ parameters.condition }})
    steps:
    - template: azure-pipelines.dotnetcore.steps.yml
      parameters:
        sourceProjects: ${{ parameters.solutionProjects }}
        testProjects: ${{ parameters.testProjects }}
        publishProjects: ${{ parameters.publishProjects }}

        restoreDisplayName: dotnet restore ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}
        restoreArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}

        buildDisplayName: dotnet build ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}
        buildArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}

        ${{ if ne('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationDebugArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }}
        ${{ if eq('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addCodeCoverageArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addCodeCoverageArguments }}

        publishDisplayName: dotnet publish ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }} ${{ parameters.addSelfContainedArguments }}
        publishArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addPublishArguments }} ${{ parameters.addConfigurationDebugArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }} ${{ parameters.addSelfContainedArguments }}
        publishOutputName: debug-${{ parameters.runtimeMoniker }}

        artifactPrefix: ${{ parameters.artifactPrefix }}

- ${{ if and(eq('true', parameters.buildConfigurationRelease), eq('framework', parameters.publishDependencyMode)) }}:
  - job: ${{ parameters.jobNamePrefix }}releaseFrameworkDependent
    displayName: ${{ parameters.jobDisplayPrefix }} Release Configuration
    pool: ${{ parameters.agentPool }}
    condition: and(ne(variables['SkipConfigurationRelease'], 'true'), ne(variables['SkipFrameworkDependent'], 'true'), ${{ parameters.condition }})
    steps:
    - template: azure-pipelines.dotnetcore.steps.yml
      parameters:
        sourceProjects: ${{ parameters.solutionProjects }}
        testProjects: ${{ parameters.testProjects }}
        publishProjects: ${{ parameters.publishProjects }}

        restoreDisplayName: dotnet restore
        restoreArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }}

        buildDisplayName: dotnet build ${{ parameters.addConfigurationReleseArguments }}
        buildArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }}

        ${{ if ne('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationReleseArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }}
        ${{ if eq('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addCodeCoverageArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addCodeCoverageArguments }}

        publishDisplayName: dotnet publish ${{ parameters.addConfigurationReleseArguments }}
        publishArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addPublishArguments }} ${{ parameters.addConfigurationReleseArguments }}
        publishOutputName: release

        artifactPrefix: ${{ parameters.artifactPrefix }}

- ${{ if and(eq('true', parameters.buildConfigurationRelease), eq('self-contained', parameters.publishDependencyMode)) }}:
  - job: ${{ parameters.jobNamePrefix }}releaseSelfContained
    displayName: '${{ parameters.jobDisplayPrefix }} Release Configuration (Self-Contained)'
    pool: ${{ parameters.agentPool }}
    condition: and(ne(variables['SkipConfigurationRelease'], 'true'), ne(variables['SkipSelfContained'], 'true'), ${{ parameters.condition }})
    steps:
    - template: azure-pipelines.dotnetcore.steps.yml
      parameters:
        sourceProjects: ${{ parameters.solutionProjects }}
        testProjects: ${{ parameters.testProjects }}
        publishProjects: ${{ parameters.publishProjects }}

        restoreDisplayName: dotnet restore ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}
        restoreArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}

        buildDisplayName: dotnet build ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}
        buildArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }}

        ${{ if ne('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationReleseArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }}
        ${{ if eq('true', parameters.enableCodeCoverage) }}:
          testDisplayName: dotnet test ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addCodeCoverageArguments }}
          testArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addCodeCoverageArguments }}

        publishDisplayName: dotnet publish ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }} ${{ parameters.addSelfContainedArguments }}
        publishArguments: ${{ parameters.commonArguments }} ${{ parameters.addCommonArguments }} ${{ parameters.addPublishArguments }} ${{ parameters.addConfigurationReleseArguments }} ${{ parameters.addRuntimeArgumentPrefix }} ${{ parameters.runtimeMoniker }} ${{ parameters.addSelfContainedArguments }}
        publishOutputName: release-${{ parameters.runtimeMoniker }}

        artifactPrefix: ${{ parameters.artifactPrefix }}
